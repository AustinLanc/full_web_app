<% layout('layout') %>

<div class="container mt-5">
  <div class="card shadow border-0 rounded-3">
    <div class="card-header bg-white border-bottom">
      <h3 class="mb-0 text-center text-dark fw-semibold">Results</h3>
    </div>
    <div class="card-body bg-light">
      <div class="row mb-4 align-items-center">
        <div class="col-md-6 mb-3 mb-md-0">
          <div class="input-group">
            <span class="input-group-text bg-secondary-subtle text-dark">
              <i class="fas fa-search"></i>
            </span>
            <input
              type="text"
              id="search"
              class="form-control border-secondary"
              onkeyup="filterTable()"
              placeholder="Search by Product Code or Batch Number..."
            >
          </div>
        </div>
        <div class="col-md-3 mb-3 mb-md-0">
          <div class="dropdown">
            <button class="btn btn-outline-dark dropdown-toggle w-100" type="button" id="columnSelector" data-bs-toggle="dropdown" aria-expanded="false">
              <i class="fas fa-columns me-1"></i>Select Columns
            </button>
            <ul class="dropdown-menu w-100" aria-labelledby="columnSelector" id="columnList">
              <!-- Dynamically generated column checkboxes go here -->
            </ul>
          </div>
        </div>
        <div class="col-md-3 text-md-end">
          <button class="btn btn-dark w-100" onclick="printTable()">
            <i class="fas fa-print me-2"></i>Print Table
          </button>
        </div>
      </div>

      <div class="table-responsive" style="max-height: 60vh; overflow-y: auto;">
        <table class="table table-hover align-middle" id="testingTable">
          <thead class="table-light sticky-top">
            <tr>
              <th>Batch Number</th>
              <th>Product Code</th>
              <th>Product Name</th>
              <th>Date</th>
              <th>Unworked Pen</th>
              <th>Worked Pen</th>
              <th>10K Pen</th>
              <th>100K Pen</th>
              <th>Drop Point</th>
              <th>Weld</th>
              <th>Wear</th>
              <th>Timken</th>
              <th>Rust</th>
              <th>Copper Corrosion</th>
              <th>Oxidation</th>
              <th>Oil Bleed</th>
              <th>Spray Off</th>
              <th>Washout</th>
              <th>Pressure Bleed</th>
              <th>Roll Stability (Dry)</th>
              <th>Roll Stability (Wet)</th>
              <th>FT-IR</th>
              <th>Minitest (-40 °C)</th>
              <th>Minitest (-30 °C)</th>
              <th>Minitest (-20 °C)</th>
              <th>Minitest (0 °C)</th>
              <th>Minitest (20 °C)</th>
              <th>Rheometer (Temp)</th>
            </tr>
          </thead>
          <tbody>
            <% for (let row of testing) { %>
              <%
                const batch_number = row.batch;
                const firstChar = batch_number && batch_number.length > 0 ? batch_number[0] : '';
                const isNotDigit = firstChar ? isNaN(parseInt(firstChar, 10)) : true;
                const lowerChar = firstChar.toLowerCase ? firstChar.toLowerCase() : '';
              %>
              <% if (
                batch_number !== 'N/A' &&
                batch_number !== '' &&
                isNotDigit &&
                lowerChar !== 'r' &&
                lowerChar !== 't' &&
                batch_number.length >= 6
              ) { %>
                <tr>
                  <td><%= row.batch %></td>
                  <td><%= row.code %></td>
                  <td><%= row.name %></td>
                  <td><%= row.formattedDate %></td>
                  <td><%= row.pen_0x %></td>
                  <td><%= row.pen_60x %></td>
                  <td><%= row.pen_10k %></td>
                  <td><%= row.pen_100k %></td>
                  <td><%= row.drop_point %></td>
                  <td><%= row.weld %></td>
                  <td><%= row.wear %></td>
                  <td><%= row.timken %></td>
                  <td><%= row.rust %></td>
                  <td><%= row.copper_corrosion %></td>
                  <td><%= row.oxidation %></td>
                  <td><%= row.oil_bleed %></td>
                  <td><%= row.spray_off %></td>
                  <td><%= row.washout %></td>
                  <td><%= row.pressure_bleed %></td>
                  <td><%= row.roll_stability_dry %></td>
                  <td><%= row.roll_stability_wet %></td>
                  <td><%= row.ft_ir %></td>
                  <td><%= row.minitest_minus_40 %></td>
                  <td><%= row.minitest_minus_30 %></td>
                  <td><%= row.minitest_minus_20 %></td>
                  <td><%= row.minitest_0 %></td>
                  <td><%= row.minitest_20 %></td>
                  <td>
                    <% if (row.rheometer != " ") { %>
                      <%= row.rheometer %> (<%= row.rheometer_temp %> °C)
                    <% } else { %>
                      <%= row.rheometer %>
                    <% } %>
                  </td>
                </tr>
              <% } %>
            <% } %>
          </tbody>
        </table>
      </div>
    </div>
  </div>
</div>

<style>
  @media (max-width: 767px) {
    .table-responsive {
      font-size: 0.9rem;
    }
    .btn-sm {
      padding: 0.25rem 0.5rem;
      font-size: 0.8rem;
    }
  }

  .dropdown-menu {
    position: absolute;
    z-index: 1050;
    max-height: 300px;
    overflow-y: auto;
    font-size: 0.9rem;
  }

  .dropdown {
    position: relative;
  }

  .table th, .table td {
    vertical-align: middle;
    white-space: nowrap;
  }
</style>

<script>
    function filterTable() {
        const input = document.getElementById("search");
        const filter = input.value.toUpperCase();
        const table = document.getElementById("testingTable");
        const tr = table.getElementsByTagName("tr");

        for (let i = 1; i < tr.length; i++) { // Start from 1 to skip the header row
            const tdCode = tr[i].getElementsByTagName("td")[1];
            const tdBatch = tr[i].getElementsByTagName("td")[0];
            if (tdCode || tdBatch) {
                const txtValueCode = tdCode.textContent || tdCode.innerText;
                const txtValueBatch = tdBatch.textContent || tdBatch.innerText;
                if (txtValueCode.toUpperCase().indexOf(filter) > -1 || txtValueBatch.toUpperCase().indexOf(filter) > -1) {
                    tr[i].style.display = "";
                } else {
                    tr[i].style.display = "none";
                }
            }
        }
    }

    const columns = [
        "Product Code", "Product Name", "Date", "Unworked Pen",
        "Worked Pen", "10K Pen", "100K Pen", "Drop Point", "Weld", "Wear",
        "Timken", "Rust", "Copper Corrosion", "Oxidation", "Oil Bleed",
        "Spray Off", "Washout", "Pressure Bleed", "Roll Stability (Dry)",
        "Roll Stability (Wet)", "FT-IR", "Minitest (-40 °C)", "Minitest (-30 °C)",
        "Minitest (-20 °C)", "Minitest (0 °C)", "Minitest (20 °C)", "Rheometer"
    ];

    // Populate column selector
    function populateColumnSelector() {
        const columnList = document.getElementById("columnList");
        columns.forEach((column, index) => {
            const li = document.createElement("li");
            li.innerHTML = `
                <label class="dropdown-item">
                    <input type="checkbox" class="column-checkbox" value="${index + 1}"> ${column}
                </label>
            `;
            columnList.appendChild(li);
        });
    }

    // Toggle column visibility
    function toggleColumnVisibility(event) {
        if (event.target.type === 'checkbox') {
            const table = document.getElementById("testingTable");
            const columnIndex = parseInt(event.target.value);
            const isChecked = event.target.checked;
            const cells = table.querySelectorAll(`td:nth-child(${columnIndex + 1}), th:nth-child(${columnIndex + 1})`);
            cells.forEach(cell => {
                cell.style.display = isChecked ? "" : "none";
            });
        }
        event.stopPropagation();
    }

    function initializeColumnVisibility() {
        const table = document.getElementById("testingTable");
        const checkboxes = document.querySelectorAll(".column-checkbox");
        checkboxes.forEach((checkbox, index) => {
            checkbox.checked = false;
            const cells = table.querySelectorAll(`td:nth-child(${index + 2}), th:nth-child(${index + 2})`);
            cells.forEach(cell => {
                cell.style.display = "none";
            });
        });
        // Show Batch Number, Product Code, Product Name, and Date by default
        for (let i = 0; i < 4; i++) {
            const cells = table.querySelectorAll(`td:nth-child(${i + 1}), th:nth-child(${i + 1})`);
            cells.forEach(cell => {
                cell.style.display = "";
            });
        }
        // Check Product Code, Product Name, and Date checkboxes
        checkboxes[0].checked = true;
        checkboxes[1].checked = true;
        checkboxes[2].checked = true;
    }

    // Filter table
    function filterTable() {
        const input = document.getElementById("search");
        const filter = input.value.toUpperCase();
        const table = document.getElementById("testingTable");
        const tr = table.getElementsByTagName("tr");

        for (let i = 1; i < tr.length; i++) {
            const tdCode = tr[i].getElementsByTagName("td")[1];
            const tdBatch = tr[i].getElementsByTagName("td")[0];
            if (tdCode || tdBatch || tdDate) {
                const txtValueCode = tdCode.textContent || tdCode.innerText;
                const txtValueBatch = tdBatch.textContent || tdBatch.innerText;
                if (txtValueCode.toUpperCase().indexOf(filter) > -1 || txtValueBatch.toUpperCase().indexOf(filter) > -1) {
                    tr[i].style.display = "";
                } else {
                    tr[i].style.display = "none";
                }
            }
        }
    }

    // Initialize
    document.addEventListener("DOMContentLoaded", function() {
        populateColumnSelector();
        initializeColumnVisibility();
        document.getElementById("columnList").addEventListener("click", toggleColumnVisibility);
    });

    function printTable() {
        var printContents = document.getElementById("testingTable").outerHTML;
        var originalContents = document.body.innerHTML;

        document.body.innerHTML = printContents;

        window.onafterprint = function() {
            window.location.reload(); // Refresh the page
        };

        window.print();
        document.body.innerHTML = originalContents;
    }
</script>